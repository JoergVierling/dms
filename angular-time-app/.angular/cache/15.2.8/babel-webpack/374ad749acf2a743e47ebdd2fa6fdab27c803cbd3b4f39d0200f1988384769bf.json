{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DiscoveryComponent {\n  constructor(http) {\n    this.http = http;\n    this.apiName = '';\n  }\n  discover() {}\n  fetchTime() {\n    this.http.get('http://localhost:81/time').subscribe(response => {\n      this.currentTime = response.time;\n      this.currentNode = response.node;\n      this.isApiAvailable = true;\n      setTimeout(() => {\n        this.fetchTime();\n      }, 1000);\n    }, error => {\n      console.error('Fehler beim Abrufen der Zeit:', error);\n      this.isApiAvailable = false;\n      setTimeout(() => {\n        this.fetchTime();\n      }, 1000);\n    });\n  }\n}\nDiscoveryComponent.ɵfac = function DiscoveryComponent_Factory(t) {\n  return new (t || DiscoveryComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nDiscoveryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DiscoveryComponent,\n  selectors: [[\"app-discovery\"]],\n  decls: 12,\n  vars: 0,\n  consts: [[\"type\", \"text\", 3, \"value\"], [3, \"click\"]],\n  template: function DiscoveryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Discover\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"Discovery by Rest APi of Consul\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"p\");\n      i0.ɵɵelementStart(5, \"h3\");\n      i0.ɵɵtext(6, \"Verwendeter Endpoint\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"span\");\n      i0.ɵɵtext(8, \"http://localhost:8500/v1/catalog/service/\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 0);\n      i0.ɵɵlistener(\"value\", function DiscoveryComponent_Template_input_value_9_listener() {\n        return ctx.apiName;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function DiscoveryComponent_Template_button_click_10_listener() {\n        return ctx.discover();\n      });\n      i0.ɵɵtext(11, \"discover\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEjB,YAAO,GAAQ,EAAE;EAFe;EAGhCC,QAAQ,IAEf;EAEAC,SAAS;IACP,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,0BAA0B,CAAC,CAACC,SAAS,CACrDC,QAAa,IAAI;MAChB,IAAI,CAACC,WAAW,GAAGD,QAAQ,CAACE,IAAI;MAChC,IAAI,CAACC,WAAW,GAAGH,QAAQ,CAACI,IAAI;MAChC,IAAI,CAACC,cAAc,GAAG,IAAI;MAC1BC,UAAU,CAAC,MAAK;QACd,IAAI,CAACT,SAAS,EAAE;MAClB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EACAU,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,IAAI,CAACF,cAAc,GAAG,KAAK;MAC3BC,UAAU,CAAC,MAAK;QACd,IAAI,CAACT,SAAS,EAAE;MAClB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CACF;EACH;;AA3BWJ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR/BC,0BAAI;MAAAA,wBAAQ;MAAAA,iBAAK;MACjBA,yBAAG;MAAAA,+CAA+B;MAAAA,iBAAI;MACtCA,oBAAG;MAEHA,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAC7BA,4BAAM;MAAAA,yDAAyC;MAAAA,iBAAO;MACtDA,gCAAuC;MAApBA;QAAA;MAAA,EAAiB;MAApCA,iBAAuC;MACvCA,kCAA6B;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAS","names":["DiscoveryComponent","constructor","http","discover","fetchTime","get","subscribe","response","currentTime","time","currentNode","node","isApiAvailable","setTimeout","error","console","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/joerg/work/uni/dms/dms/angular-time-app/src/app/discovery/discovery.component.ts","/home/joerg/work/uni/dms/dms/angular-time-app/src/app/discovery/discovery.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-discovery',\n  templateUrl: './discovery.component.html',\n  styleUrls: ['./discovery.component.scss']\n})\nexport class DiscoveryComponent {\n  \n  constructor(private http: HttpClient) {}\n\n  public apiName:string=''\n  public discover():void{\n\n  }\n\n  fetchTime(): void {\n    this.http.get<any>('http://localhost:81/time').subscribe(\n      (response: any) => {\n        this.currentTime = response.time;\n        this.currentNode = response.node;\n        this.isApiAvailable = true;\n        setTimeout(() => {\n          this.fetchTime();\n        }, 1000);\n      },\n      (error: any) => {\n        console.error('Fehler beim Abrufen der Zeit:', error);\n        this.isApiAvailable = false;\n        setTimeout(() => {\n          this.fetchTime();\n        }, 1000);\n      }\n    );\n  }\n\n\n}\n","<h2>Discover</h2>\n<p>Discovery by Rest APi of Consul</p>\n<p>\n\n<h3>Verwendeter Endpoint</h3> \n<span>http://localhost:8500/v1/catalog/service/</span>\n<input type=\"text\" (value)=\"apiName\" />\n<button (click)=\"discover()\">discover</button>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}